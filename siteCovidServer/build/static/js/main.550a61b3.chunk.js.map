{"version":3,"sources":["core/workWithServer.js","components/Button.js","redux/actions/actions.js","redux/actions/actionsType.js","components/Login.js","components/Header.js","components/ListOfPerson.js","components/MakeReport.js","components/SeeReport.js","components/ListForEntering.js","components/Loader.js","components/Modal.js","components/MainPageForCenter.js","components/Home.js","App.js","redux/reducers/user.js","redux/rootReducer.js","index.js"],"names":["workWithServer","initUser","requestPost","login","data","logOut","changePassword","getListOfCity","getListOfPerson","setListOfPerson","getListOfStatus","setListOfReport","getListOfReport","getListOfRank","getListOfGroup","status","response","Promise","resolve","json","reject","Error","statusText","request","url","body","a","trackPromise","fetch","then","headers","csrfmiddlewaretoken","getCookie","credentials","method","mode","JSON","stringify","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","Button","icon","type","text","onClick","className","disabled","classNameText","classes","push","join","InputForDatePicker","props","value","readOnly","user","connect","dispatch","useState","setName","validName","setValidName","password","setPassword","validPassword","setValidPassword","onSubmit","e","preventDefault","length","is_initial","catch","htmlFor","id","placeholder","onChange","target","state","headerRef","setChangePassword","SetPassword","ref","username","group","is_control","ListOfPerson","setShowBody","toggleCleared","setToggleCleared","idNewRow","setIdNewRow","listWithCity","setListWithCity","listWithRank","setListWithRank","listOfPerson","searchByName","setSearchByName","selectedRows","refIs_military","createRef","refRank_id","refName","refCity_id","refIs_woman_with_children","useEffect","filter","el","is_editable","map","current","is_military","toString","Number","rank_id","city_id","is_woman_with_children","filterListOfPeople","indexOf","columns","selector","sortable","cell","row","index","key","prev","actions","prevState","contextActions","idOfRows","title","selectableRows","pagination","onSelectedRowsChange","contextMessage","singular","plural","message","clearSelectedRows","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","noRowsPerPage","selectAllRowsItem","selectAllRowsItemText","paginationPerPage","paginationRowsPerPageOptions","MakeReport","Date","startDate","setStartDate","refStatus","refComment","listStatus","setListStatus","dataByday","obj","userForControl_id","elem","status_id","setTimeout","comment","selected","date","dateFormat","customInput","toLocaleString","makeTableData","mass","group_id__name","rank_id__name","SeeReport","printRef","listOfCity","setListOfCity","onWorkAll","onWorkMilitary","onWorkPeople","onWorkMilitaryWithChildren","onWorkPeopleWithChildren","withDisease","withNoInfectionAmb","status_id__name","withNoInfectionStat","withPnevmoniaAmb","withPnevmoniaStat","withRespiratornoAmb","withRespiratornoStat","withKarantin","withCovidAmb","withCovidStat","classList","add","window","print","remove","ListForEntering","dateToday","setDate","getDate","tomorrow","console","log","listOfGroup","setListOfGroup","toLocaleDateString","byGroup","person","group_id","massOdd","_","massEven","style","pageBreakAfter","oddElem","Loader","usePromiseTracker","promiseInProgress","MyModal","show","showModal","children","CSSTransition","in","timeout","unmountOnExit","classNames","role","aria-modal","aria-labelledby","MainPageForCenter","curr","firstDay","getFullYear","getMonth","lastDay","endDate","setEndDate","month","setMonth","massWithDate","setMassWithDate","listOfReport","setShow","personModal","setPersonModal","objectModal","setObjectModal","tempMassWithDate","currentDate","minWidth","format","listReportByPerson","modal","returnMass","showBody","mainButton","mainButtonForControl","bodyForControl","bodyForCentre","initialState","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.550a61b3.chunk.js","sourcesContent":["import {trackPromise} from \"react-promise-tracker\";\n\nconst workWithServer = () => {\n  return {\n    initUser: () => {\n      return requestPost('/initUser/')\n    },\n    login: (data) => {\n      return requestPost('/login/', data)\n    },\n    logOut: () => {\n      return requestPost('/logout/',)\n    },\n    changePassword: (data) => {\n      return requestPost('/changePassword/', data)\n    },\n    getListOfCity: () => {\n      return requestPost('/getListOfCity/',)\n    },\n    getListOfPerson: () => {\n      return requestPost('/getListOfPerson/',)\n    },\n    setListOfPerson: (data) => {\n      return requestPost('/setListOfPerson/', data)\n    },\n    getListOfStatus: () => {\n      return requestPost('/getListOfStatus/')\n    },\n    setListOfReport: (data) => {\n      return requestPost('/setListOfReport/', data)\n    },\n    getListOfReport: (data) => {\n      return requestPost('/getListOfReport/', data)\n    },\n    getListOfRank: (data) => {\n      return requestPost('/getListOfRank/', data)\n    },\n    getListOfGroup: (data) => {\n      return requestPost('/getListOfGroup/', data)\n    },\n  }\n};\n\nexport default workWithServer()\n\nfunction status(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return Promise.resolve(response.json())\n  } else {\n    return Promise.reject(new Error(response.statusText))\n  }\n}\n\nasync function request(url, body) {\n  return await trackPromise(fetch(url, body).then(status));\n}\n\nasync function requestPost(url, data) {\n  const headers = {\n    'Accept': 'application/json, text/plain, */*',\n    \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n    'X-Requested-With': 'XMLHttpRequest',\n  };\n  let csrfmiddlewaretoken = getCookie('csrftoken');\n  csrfmiddlewaretoken && (headers['X-CSRFToken'] = csrfmiddlewaretoken);\n  return await request(url, {\n    credentials: 'include',\n    method: 'POST',\n    mode: 'same-origin',\n    headers: headers,\n    body: JSON.stringify(data)\n  })\n}\n\nfunction getCookie(name) {\n  let matches = document.cookie.match(new RegExp(\n    \"(?:^|; )\" + name.replace(/([.$?*|{}()[]\\/+^])/g, '\\\\$1') + \"=([^;]*)\"\n  ))\n  return matches ? decodeURIComponent(matches[1]) : undefined\n}\n\nconst setCookie = (name, value, props = {'Path': '/', maxAge: 1800}) => {\n  let exp = props.expires\n  if (typeof exp == \"number\" && exp) {\n    let d = new Date()\n    d.setTime(d.getTime() + exp * 1000)\n    exp = props.expires = d\n  }\n  if (exp && exp.toUTCString) {\n    props.expires = exp.toUTCString()\n  }\n\n  value = encodeURIComponent(value)\n  let updatedCookie = name + \"=\" + value\n\n  for (let propName in props) {\n    updatedCookie += \"; \" + propName\n    let propValue = props[propName]\n    if (propValue !== true) {\n      updatedCookie += \"=\" + propValue\n    }\n  }\n\n  document.cookie = updatedCookie\n}\n\nexport {setCookie}","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nButton.propTypes = {\n  icon: PropTypes.string,\n  type: PropTypes.string,\n  text: PropTypes.string,\n  className: PropTypes.string,\n  classNameText: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool\n}\n\nexport default function Button({icon, type, text, onClick, className, disabled, classNameText}) {\n  const classes = [\n    'rounded-md px-2 py-1 m-2 place-content-center focus:outline-none '\n  ];\n\n  classes.push(className);\n\n  if (type === 'primary') {\n    classes.push('text-white bg-blue-500 bg-opacity-75 hover:bg-opacity-100')\n  } else if (type === 'success') {\n    classes.push('text-white bg-green-600')\n  } else if (type === 'secondary') {\n    classes.push('text-white bg-gray-600')\n  } else if (type === 'danger') {\n    classes.push('text-white bg-red-600')\n  } else if (type === 'warning') {\n    classes.push('text-white bg-yellow-600')\n  }\n\n  return (\n    <button className={classes.join(' ')} onClick={onClick} disabled={disabled}>\n      {icon ? <i className=\"material-icons mx-1 float-left\">{icon}</i> : ''}\n      <span className={\"my-auto \" + classNameText}>{text}</span>\n    </button>\n  )\n}\n\n\nconst InputForDatePicker = (props) => {\n  return (\n    <input\n      className=\"rounded border border-blue-700 p-1 mr-2\"\n      onClick={props.onClick}\n      value={props.value}\n      type=\"text\"\n      readOnly={true}\n    />\n  )\n};\n\nexport {\n  InputForDatePicker\n}","import {InitUser} from \"./actionsType\";\n\nexport function initUser(user) {\n  return {\n    type: InitUser,\n    user\n  }\n}","export const InitUser = 'InitUser'\nexport const LoginUser = 'LoginUser'","import React, {useState} from \"react\"\nimport PropTypes from \"prop-types\";\nimport workWithServer from \"../core/workWithServer\";\nimport Button from \"./Button\";\nimport {initUser} from \"../redux/actions/actions\";\nimport {connect} from \"react-redux\";\n\nfunction Login({initUser}) {\n  const [name, setName] = useState('');\n  const [validName, setValidName] = useState(true);\n  const [password, setPassword] = useState('');\n  const [validPassword, setValidPassword] = useState(true);\n\n  const login = (e) => {\n    e.preventDefault()\n    const validName = name.length > 0\n    const validPassword = password.length > 0\n    setValidName(validName)\n    setValidPassword(validPassword)\n\n    if (setValidName && validPassword) {\n      workWithServer.login({\n        \"username\": name,\n        \"password\": password\n      }).then((data) => {\n        data['error'] ? setValidName(false) :\n        initUser({...data, is_initial: true})\n      })\n        .catch(() => {setValidName(false)})\n    }\n\n  }\n  return (\n    <div className=\"mt-40\">\n      <p className=\"text-3xl mx-auto text-center\"> Пройдите авторизацию в системе</p>\n      <form className=\"pt-4 w-1/2 mx-auto\" onSubmit={login}>\n        <div className=\"mb-2\">\n          <label className=\"block mb-1\" htmlFor=\"name\">\n            Имя\n          </label>\n          <input\n            className=\"appearance-none border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:border-blue-600\"\n            id=\"email\"\n            type=\"text\"\n            placeholder=\"Введите имя\"\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n              setValidName(true)\n            }}\n          />\n          {!validName && <label className=\"text-xs text-red-400 pl-2\">Пользователя не существует</label>}\n        </div>\n\n        <div className=\"mb-2\">\n          <label className=\"block mb-1\" htmlFor=\"password\">\n            Пароль\n          </label>\n          <input\n            className=\"appearance-none border rounded w-full py-2 px-3 text-gray-700 focus:outline-none focus:border-blue-600\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Введите пароль\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n              setValidPassword(true)\n            }}\n          />\n          {!validPassword && <label className=\"text-xs text-red-400 pl-2\">Некорректный пароль</label>}\n        </div>\n\n        <div className=\"mb-2 text-center\">\n          <Button text=\"Войти в аккаунт\" type=\"primary\"/>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initUser: user => dispatch(initUser(user))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Login)\nLogin.propTypes = {\n  loginUser: PropTypes.func,\n};\n","import React, {useState} from \"react\";\nimport Button from \"./Button\";\nimport workWithServer from \"../core/workWithServer\";\nimport {initUser} from \"../redux/actions/actions\";\nimport {connect} from \"react-redux\";\n\nfunction Header({user, initUser, headerRef}) {\n  const [changePassword, setChangePassword] = useState(false);\n  const [password, SetPassword] = useState('');\n  const logOut = () => {\n    workWithServer.logOut().then(() => initUser({...user, username: ''}))\n  };\n\n  return (\n    <>\n      <div ref={headerRef} className=\"p-3 border-b flex justify-between\">\n        <span className=\"my-auto p-2 border rounded border-blue-600\">{user.username} - {user.group}</span>\n        <div>\n          {!user.is_control && (!changePassword\n            ? <Button className=\"\" type='warning' onClick={() => {\n              setChangePassword(true)\n            }} text=\"Сменить пароль\"/>\n            : (\n              <>\n                <input type=\"text\" className=\"rounded border border-blue-700 p-1\" value={password} onChange={e => {\n                  SetPassword(e.target.value)\n                }}\n                       placeholder=\"Введите новый пароль...\"/>\n                <Button type='warning' onClick={() => {\n                  setChangePassword(false);\n                  workWithServer.changePassword({'password': password}).then(() => {initUser({...user, username: ''})});\n                }} text=\"Сохранить пароль\"/>\n              </>\n            ))\n          }\n          <Button className=\"\" type='primary' onClick={logOut} text=\"Выйти\"/>\n        </div>\n      </div>\n    </>\n  )\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initUser: user => dispatch(initUser(user))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React, {createRef, useEffect, useState} from \"react\";\nimport Button from \"./Button\";\nimport DataTable from 'react-data-table-component';\nimport workWithServer from \"../core/workWithServer\";\n\nexport default function ListOfPerson({setShowBody}) {\n  const [toggleCleared, setToggleCleared] = useState(false);\n  const [idNewRow, setIdNewRow] = useState(-1);\n  const [listWithCity, setListWithCity] = useState([]);\n  const [listWithRank, setListWithRank] = useState([]);\n  const [listOfPerson, setListOfPerson] = useState([]);\n\n  const [searchByName, setSearchByName] = useState('');\n\n  let selectedRows = [];\n\n  let refIs_military = createRef();\n  let refRank_id = createRef();\n  let refName = createRef();\n  let refCity_id = createRef();\n  let refIs_woman_with_children = createRef();\n\n  useEffect(() => {\n    workWithServer.getListOfCity().then(setListWithCity);\n    workWithServer.getListOfPerson().then(setListOfPerson);\n    workWithServer.getListOfRank().then(setListWithRank);\n  }, []);\n\n  useEffect(() => {\n    listOfPerson.filter(el => el.is_editable).map(el => {\n      refIs_military.current.value = el.is_military.toString();\n      refRank_id.current.value = Number(el.rank_id);\n      refName.current.value = el.name;\n      refCity_id.current.value = Number(el.city_id);\n      refIs_woman_with_children.current.value = el.is_woman_with_children.toString()\n    })\n  }, [listOfPerson]);\n\n  const filterListOfPeople = listOfPerson.filter(el => el.name.indexOf(searchByName) > -1);\n\n  const columns = [\n    {\n      name: '№',\n      selector: 'id',\n      sortable: true,\n      cell: (row, index) => {\n        return <div>{index + 1}</div>;\n      },\n    },\n    {\n      name: 'Военнослужащий или гр. персонал',\n      selector: 'is_military',\n      sortable: true,\n      cell: row => {\n        return row.is_editable\n          ?\n          <select ref={refIs_military} className=\"w-full h-full border-b border-blue-700 bg-white\">\n            <option value={true}>Военнослужащий</option>\n            <option value={false}>Гр. персонал</option>\n          </select>\n          : <div>{row.is_military ? \"Военнослужащий\" : \"Гр. персонал\"}</div>;\n      },\n    },\n    {\n      name: 'Воинское звание',\n      selector: 'rank_id',\n      sortable: true,\n      cell: row => {\n        return row.is_editable\n          ? <select ref={refRank_id} className=\"w-full h-full border-b border-blue-700 bg-white\">\n            <option value=\"\">Сбросить воинское звание</option>\n            {listWithRank.map(el => <option key={el.id} value={el.id}>{el.name}</option>)}\n          </select>\n          : <div>{(listWithRank.filter(el => el.id === Number(row.rank_id))).map(el => el.name)}</div>;\n      },\n    },\n    {\n      name: 'ФИО',\n      selector: 'name',\n      sortable: true,\n      cell: row => {\n        return row.is_editable\n          ? <input ref={refName} className=\"w-full h-full border-b border-blue-700 bg-white\"/>\n          : <div>{row.name}</div>;\n      },\n    },\n    {\n      name: 'Город',\n      selector: 'city_id',\n      sortable: true,\n      cell: row => {\n        return row.is_editable\n          ? <select ref={refCity_id} className=\"w-full h-full border-b border-blue-700 bg-white\">\n            {listWithCity.map(el => <option key={el.id} value={el.id}>{el.name}</option>)}\n          </select>\n          : <div>{(listWithCity.filter(el => el.id === Number(row.city_id))).map(el => el.name)}</div>;\n      },\n    },\n    {\n      name: 'Является ли женщиной с детьми до 14 лет?',\n      selector: 'is_woman_with_children',\n      sortable: true,\n      cell: row => {\n        return row.is_editable\n          ? <select ref={refIs_woman_with_children} className=\"w-full h-full border-b border-blue-700 bg-white\">\n            <option value={true}>Да</option>\n            <option value={false}>Нет</option>\n          </select>\n          : <div>{row.is_woman_with_children ? \"Да\" : \"Нет\"}</div>;\n      },\n    },\n    {\n      name: 'Изменить',\n      selector: 'edit',\n      sortable: true,\n      cell: row => {\n        return row.is_editable\n          ? <Button type=\"warning\" text=\"Применить\" onClick={() => {\n            setListOfPerson(prev => prev.map(el => {\n              if (el.id === row.id) {\n                el.is_editable = false;\n                el.is_military = refIs_military.current.value === 'true';\n                el.rank_id = refRank_id.current.value;\n                el.name = refName.current.value;\n                el.city_id = refCity_id.current.value;\n                el.is_woman_with_children = refIs_woman_with_children.current.value === 'true'\n              }\n              return el\n            }))\n          }}/>\n          : <Button type=\"warning\" text=\"Изменить\" onClick={() => {\n            setListOfPerson(prev => prev.map(el => {\n              el.is_editable = el.id === row.id;\n              return el\n            }))\n          }}/>\n      },\n    },\n  ];\n\n  const selectedRow = (state) => {\n    selectedRows = state.selectedRows\n  };\n\n  const actions = (\n    <>\n      <input className=\"bg-white rounded border border-blue-600 outline-none text-base p-1\" placeholder=\"поиск по имени...\" value={searchByName}\n             onChange={e => setSearchByName(e.target.value)}/>\n      <Button className=\"text-base\" type=\"primary\" text=\"Добавить\" onClick={() => {\n        setListOfPerson([{\n          id: idNewRow,\n          is_military: true,\n          name: '',\n          is_woman_with_children: false,\n          is_editable: true\n        }, ...listOfPerson.map((el => {\n          el.is_editable = false;\n          return el\n        }))]);\n        setIdNewRow(prevState => prevState - 1)\n      }}/>\n    </>);\n\n  const contextActions = <Button className=\"text-base\" type=\"danger\" text=\"Удалить\" onClick={() => {\n    const idOfRows = selectedRows.map((el) => el.id);\n    setListOfPerson(listOfPerson.filter((el) => idOfRows.indexOf(el.id) === -1));\n    setToggleCleared(!toggleCleared)\n  }}/>;\n\n\n  return (\n    <div>\n      <div>\n        <Button className=\"\" type='primary' text=\"Назад\" onClick={() => {\n          setShowBody('nothing')\n        }}/>\n        <Button className=\"\" type='success' text=\"Сохранить\" onClick={() => {\n          workWithServer.setListOfPerson({'data': listOfPerson}).then(() => setShowBody('nothing'))\n        }}/>\n      </div>\n      <DataTable\n        title=\"Управление личным составом центра\"\n        columns={columns}\n        selectableRows\n        data={filterListOfPeople}\n        pagination={true}\n        onSelectedRowsChange={selectedRow}\n        contextMessage={{singular: 'строка', plural: 'строк', message: ''}}\n        contextActions={contextActions}\n        actions={actions}\n        clearSelectedRows={toggleCleared}\n        paginationComponentOptions={{\n          rowsPerPageText: 'Строк на странице:',\n          rangeSeparatorText: 'из',\n          noRowsPerPage: false,\n          selectAllRowsItem: false,\n          selectAllRowsItemText: 'Все'\n        }}\n        paginationPerPage={100}\n        paginationRowsPerPageOptions={[25, 50, 100]}\n      />\n    </div>\n  )\n}\n\n","import React, {createRef, useEffect, useState} from \"react\";\nimport workWithServer from \"../core/workWithServer\";\nimport Button, {InputForDatePicker} from \"./Button\";\nimport DataTable from \"react-data-table-component\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction MakeReport({setShowBody}) {\n  const [startDate, setStartDate] = useState(new Date());\n\n  const refStatus = createRef();\n  const refComment = createRef();\n\n  const [listStatus, setListStatus] = useState([]);\n  const [listOfPerson, setListOfPerson] = useState([]);\n\n  const [searchByName, setSearchByName] = useState('');\n\n  const filterListOfPeople = listOfPerson.filter(el => el.name.indexOf(searchByName) > -1);\n\n  const dataByday = () => {\n    workWithServer.getListOfReport({'date': startDate}).then(data => {\n      setListOfPerson(prevState => {\n        return [...prevState.map(el => {\n          let index = data.filter(obj => obj.userForControl_id === el.id);\n          if (index.length > 0) return {...el, ...index[0]};\n          delete el['comment'];\n          delete el['status_id'];\n          return el\n        })]\n      })\n    })\n  };\n\n  useEffect(() => {\n    workWithServer.getListOfPerson().then((data) => {\n      setListOfPerson(data);\n      dataByday();\n    });\n    workWithServer.getListOfStatus().then(setListStatus);\n  }, []);\n\n  const columns = [\n    {\n      name: '№',\n      selector: 'id',\n      sortable: true,\n      cell: (row, index) => {\n        return <div>{index + 1}</div>;\n      },\n    },\n    {\n      name: 'Воинское звание',\n      selector: 'rank_id__name',\n      sortable: true,\n    },\n    {\n      name: 'ФИО',\n      selector: 'name',\n      sortable: true,\n    },\n    {\n      name: 'Статус',\n      selector: ' status_id',\n      sortable: true,\n      cell: row => {\n        const elem = row.is_editable\n          ? <select ref={refStatus} className=\"w-full h-full border-b border-blue-700 bg-white\">\n            <option key={-1} value=\"-1\">Сбросить статус</option>\n            {listStatus.map(el => <option key={el.id} value={el.id}>{el.name}</option>)}\n          </select>\n          : <div>{(listStatus.filter(el => el.id === Number(row.status_id))).map(el => el.name)}</div>\n        if (row.is_editable && row.status_id) setTimeout(() => refStatus.current.value = row.status_id, 200)\n        return elem\n      },\n    },\n    {\n      name: 'Комментарий',\n      selector: 'comment',\n      sortable: true,\n      cell: row => {\n        const elem = row.is_editable\n          ? <input ref={refComment} className=\"w-full h-full border-b border-blue-700 bg-white\"/>\n          : <div>{row.comment}</div>;\n        if (row.is_editable) setTimeout(() => refComment.current.value = row.comment ? row.comment : '', 200)\n        return elem\n      },\n    },\n    {\n      name: 'Изменить',\n      selector: 'edit',\n      sortable: true,\n      cell: row => {\n        return row.is_editable\n          ? <Button type=\"warning\" text=\"Применить\" onClick={() => {\n            setListOfPerson(prev => prev.map(el => {\n              if (el.id === row.id) {\n                el.is_editable = false;\n                el.comment = refComment.current.value;\n                el.status_id = refStatus.current.value\n              }\n              return el\n            }))\n          }}/>\n          : <Button type=\"warning\" text=\"Изменить\" onClick={() => {\n            setListOfPerson(prev => prev.map(el => {\n              el.is_editable = el.id === row.id;\n              return el\n            }))\n          }}/>\n      },\n    },\n  ];\n\n  const actions = (\n    <>\n      <input  className=\"bg-white rounded border border-blue-600 outline-none text-base p-1\" placeholder=\"поиск по имени...\" value={searchByName}\n              onChange={e => setSearchByName(e.target.value)}/>\n    </>);\n  return (\n    <div>\n      <div>\n        <Button className=\"\" type='primary' text=\"Назад\" onClick={() => {\n          setShowBody('nothing')\n        }}/>\n        <Button className=\"text-base\" type='success' text=\"Сохранить\" onClick={() => {\n          workWithServer.setListOfReport({\n              'data': listOfPerson,\n              'date': startDate\n            }\n          ).then(() => setShowBody('nothing'))\n        }}/>\n\n        <Button className=\"\" type='primary' text=\"Использовать данные за:\" onClick={() => {\n          dataByday();\n        }}/>\n\n        <DatePicker\n          className=\"rounded border border-blue-700 p-1\"\n          selected={startDate}\n          onChange={date => setStartDate(date)}\n          dateFormat=\"dd.MM.yyyy\"\n          customInput={<InputForDatePicker/>}\n        />\n      </div>\n      <DataTable\n        title={\"Сформировать отчет на \" + startDate.toLocaleString(\"ru\")}\n        columns={columns}\n        data={filterListOfPeople}\n        pagination={true}\n        contextMessage={{singular: 'строка', plural: 'строк', message: 'выбрано'}}\n        paginationComponentOptions = {{\n          rowsPerPageText: 'Строк на странице:',\n          rangeSeparatorText: 'из',\n          noRowsPerPage: false,\n          selectAllRowsItem: false,\n          selectAllRowsItemText: 'Все'\n        }}\n        actions={actions}\n        paginationPerPage={100}\n        paginationRowsPerPageOptions={[25,50,100]}\n      />\n    </div>\n  )\n}\n\nexport default MakeReport\n","import React, {createRef, useEffect, useState} from \"react\";\nimport Button, {InputForDatePicker} from \"./Button\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport workWithServer from \"../core/workWithServer\";\n\n\nfunction makeTableData(mass) {\n  return (\n    mass.length > 0\n      ? mass.map((el, index) => {\n        return (\n          <div className=\"flex\">\n            <p className=\"border p-1 inline-block w-1/5\">{index + 1}</p>\n            <p className=\"border p-1 inline-block w-1/5\">{el.group_id__name}</p>\n            <p className=\"border p-1 inline-block w-1/5\">{el.rank_id__name}</p>\n            <p className=\"border p-1 inline-block w-1/5\">{el.name}</p>\n            <p className=\"border p-1 inline-block w-1/5\"> {el.comment}</p>\n          </div>\n        )\n      })\n      : <p className=\"text-center border p-1\"> Отсутствуют</p>\n  )\n}\n\nfunction SeeReport({setShowBody, headerRef}) {\n  const [startDate, setStartDate] = useState(new Date());\n  const printRef = createRef();\n\n  const [listOfPerson, setListOfPerson] = useState([]);\n  const [listOfCity, setListOfCity] = useState([]);\n\n  const getListOfReport = () => {\n    workWithServer.getListOfReport({'date': startDate}).then(data => {\n      setListOfPerson(prevState => prevState.map(el => {\n        let index = data.filter(obj => obj.userForControl_id === el.id);\n        if (index.length > 0) return {...el, ...index[0]};\n        delete el['comment'];\n        delete el['status_id'];\n        return el\n      }))\n    })\n  };\n\n  useEffect(() => {\n    workWithServer.getListOfPerson().then(data => {\n      setListOfPerson(data);\n      getListOfReport();\n    });\n    workWithServer.getListOfCity().then(setListOfCity);\n  }, []);\n\n  useEffect(() => {\n    getListOfReport();\n  }, [startDate]);\n\n  const onWorkAll = listOfPerson.filter(el => !el.status_id);\n  const onWorkMilitary = onWorkAll.filter(el => el.is_military);\n  const onWorkPeople = onWorkAll.filter(el => el.is_military === false);\n  const onWorkMilitaryWithChildren = onWorkMilitary.filter(el => el.is_woman_with_children);\n  const onWorkPeopleWithChildren = onWorkPeople.filter(el => el.is_woman_with_children);\n\n  let withDisease = listOfPerson.filter(el => !!el.status_id);\n\n  const withNoInfectionAmb = withDisease.filter(el => el.status_id__name === 'Неинфекционное заболевание, амбулаторно');\n  const withNoInfectionStat = withDisease.filter(el => el.status_id__name === 'Неинфекционное заболевание, стационарно');\n\n  const withPnevmoniaAmb = withDisease.filter(el => el.status_id__name === 'Пневмония, амбулаторно');\n  const withPnevmoniaStat = withDisease.filter(el => el.status_id__name === 'Пневмония, стационарно');\n\n  const withRespiratornoAmb = withDisease.filter(el => el.status_id__name === 'Респираторное заболевание, амбулаторно');\n  const withRespiratornoStat = withDisease.filter(el => el.status_id__name === 'Респираторное заболевание, стационарно');\n\n  const withKarantin = listOfPerson.filter(el => el.status_id__name === 'Карантин');\n\n  const withCovidAmb = withDisease.filter(el => el.status_id__name === 'Коронавирус, амбулаторно');\n  const withCovidStat = withDisease.filter(el => el.status_id__name === 'Коронавирус, стационарно');\n\n  withDisease = [...withNoInfectionAmb, ...withNoInfectionStat, ...withPnevmoniaAmb, ...withPnevmoniaStat,\n    ...withRespiratornoAmb, ...withRespiratornoStat, ...withKarantin, ...withCovidAmb, ...withCovidStat];\n\n  return (\n    <>\n      <div ref={printRef}>\n        <Button className=\"\" type='primary' text=\"Назад\" onClick={() => {\n          setShowBody('nothing')\n        }}/>\n        <Button className=\"\" type='success' text=\"Распечатать\" onClick={() => {\n          printRef.current.classList.add('hidden');\n          headerRef.current.classList.add('hidden');\n          window.print();\n          printRef.current.classList.remove('hidden');\n          headerRef.current.classList.remove('hidden');\n        }}/>\n        <DatePicker\n          className=\"rounded border border-blue-700 p-1\"\n          selected={startDate}\n          onChange={setStartDate}\n          dateFormat=\"dd.MM.yyyy\"\n          customInput={<InputForDatePicker/>}\n        />\n      </div>\n\n      <div className=\"m-4\">\n        <p className=\"text-center\">\n          СПРАВКА-ДОКЛАД <br/>\n          о состоянии дел в ФГКУ \"12 ЦНИИ\" Минобороны России <br/>\n          на {startDate.toLocaleString(\"ru\")}\n        </p>\n        <p className=\"font-bold\">\n          1. Находятся на службе:\n        </p>\n        <p>\n          Всего <b>{onWorkAll.length}</b>, в том числе: <br/>\n          военнослужащие - <b>{onWorkMilitary.length}</b> чел., из них женщин с детьми до 14 лет\n          - {onWorkMilitaryWithChildren.length} чел. <br/>\n          гражданские - <b>{onWorkPeople.length}</b> чел., из них женщин с детьми до 14 лет\n          - {onWorkPeopleWithChildren.length} чел.\n        </p>\n        <div className=\"mt-1 text-center\">\n          <div className=\"flex\">\n            <p className=\"border p-1 inline-block w-1/3\"> ППД</p>\n            <p className=\"border p-1 inline-block w-1/3\"> Военнослужащих</p>\n            <p className=\"border p-1 inline-block w-1/3\"> Гр. персонала</p>\n          </div>\n          {listOfCity.map(el => {\n            return (\n              <div className=\"flex\">\n                <span className=\"border p-1 inline-block w-1/3\">{el.name}</span>\n                <span\n                  className=\"border p-1 inline-block w-1/3\"> {onWorkMilitary.filter(obj => obj.city_id === el.id).length}</span>\n                <span\n                  className=\"border p-1 inline-block w-1/3\">{onWorkPeople.filter(obj => obj.city_id === el.id).length}</span>\n              </div>\n            )\n          })}\n        </div>\n\n        <p>\n          <b>2. Число заболевших:</b><br/>\n          Всего - <b>{withDisease.length}</b> <br/>\n          в том числе:\n        </p>\n        <p className=\"font-bold text-center \">\n          Не ОРВИ {withNoInfectionAmb.length + withNoInfectionStat.length} - чел.\n          ({withNoInfectionAmb.filter(el => el.is_military).length + withNoInfectionAmb.filter(el => el.is_military).length} в/сл,\n          {withNoInfectionAmb.filter(el => !el.is_military).length + withNoInfectionAmb.filter(el => !el.is_military).length} гп)\n        </p>\n        <div className=\"mt-1 text-center\">\n          <div className=\"flex\">\n            <p className=\"border p-1 inline-block w-1/5\"> №</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Подразделение</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Воиское звание</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Фамилия, иницалы</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Комментарий</p>\n          </div>\n          <p className=\"font-bold text-center border p-1\">Стационар</p>\n          {makeTableData(withNoInfectionStat)}\n          <p className=\"font-bold text-center border p-1\">Амбулаторно</p>\n          {makeTableData(withNoInfectionAmb)}\n        </div>\n        <p className=\"font-bold text-center mt-8\">\n          Пневмония {withPnevmoniaAmb.length + withPnevmoniaStat.length} - чел.\n          ({withPnevmoniaAmb.filter(el => el.is_military).length + withPnevmoniaStat.filter(el => el.is_military).length} в/сл,\n          {withPnevmoniaAmb.filter(el => !el.is_military).length + withPnevmoniaStat.filter(el => !el.is_military).length} гп)\n        </p>\n        <div className=\" mt-1 text-center\">\n          <div className=\"flex\">\n            <p className=\"border p-1 inline-block w-1/5\"> №</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Подразделение</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Воиское звание</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Фамилия, иницалы</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Комментарий</p>\n          </div>\n          <p className=\"font-bold text-center border p-1\">Стационар</p>\n          {makeTableData(withPnevmoniaStat)}\n          <p className=\"font-bold text-center border p-1\">Амбулаторно</p>\n          {makeTableData(withPnevmoniaAmb)}\n        </div>\n\n        <p className=\"font-bold text-center mt-8\">\n          Острые респираторные вирусные инфекции (не коронавирусная\n          инфекция) {withRespiratornoStat.length + withRespiratornoAmb.length} - чел.\n          ({withRespiratornoStat.filter(el => el.is_military).length + withRespiratornoAmb.filter(el => el.is_military).length} в/сл,\n          {withRespiratornoStat.filter(el => !el.is_military).length + withRespiratornoAmb.filter(el => !el.is_military).length} гп)\n        </p>\n        <div className=\"mt-1 text-center\">\n          <div className=\"flex\">\n            <p className=\"border p-1 inline-block w-1/5\"> №</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Подразделение</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Воиское звание</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Фамилия, иницалы</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Комментарий</p>\n          </div>\n          <p className=\"font-bold text-center border p-1\">Стационар</p>\n          {makeTableData(withRespiratornoStat)}\n          <p className=\"font-bold text-center border p-1\">Амбулаторно</p>\n          {makeTableData(withRespiratornoAmb)}\n        </div>\n\n        <p className=\"font-bold text-center mt-8\">\n          Число находящихся на карантине (изоляция) {withKarantin.length} - чел.\n          ({withKarantin.filter(el => el.is_military).length} в/сл,\n          {withKarantin.filter(el => !el.is_military).length} гп)\n        </p>\n        <div className=\"mt-1 text-center\">\n          <div className=\"flex\">\n            <p className=\"border p-1 inline-block w-1/5\"> №</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Подразделение</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Воиское звание</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Фамилия, иницалы</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Комментарий</p>\n          </div>\n          {makeTableData(withKarantin)}\n        </div>\n        <p className=\"font-bold text-center mt-8\">\n          Коронавирусная инфекция - {withCovidAmb.length + withCovidStat.length} чел.\n          ({withCovidAmb.filter(el => el.is_military).length + withCovidStat.filter(el => el.is_military).length} в/сл,\n          {withCovidAmb.filter(el => !el.is_military).length + withCovidStat.filter(el => !el.is_military).length} гп)\n        </p>\n        <div className=\"mt-1 text-center\">\n          <div className=\"flex\">\n            <p className=\"border p-1 inline-block w-1/5\"> №</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Подразделение</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Воиское звание</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Фамилия, иницалы</p>\n            <p className=\"border p-1 inline-block w-1/5\"> Комментарий</p>\n          </div>\n          <p className=\"font-bold text-center border p-1\">Стационар</p>\n          {makeTableData(withCovidStat)}\n          <p className=\"font-bold text-center border p-1\">Амбулаторно</p>\n          {makeTableData(withCovidAmb)}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default SeeReport","import React, {createRef, useEffect, useState} from 'react'\r\nimport Button, {InputForDatePicker} from \"./Button\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport workWithServer from \"../core/workWithServer\";\r\n\r\nfunction ListForEntering({headerRef, setShowBody}) {\r\n  const dateToday = new Date();\r\n  dateToday.setDate(dateToday.getDate() + 1);\r\n  const tomorrow = new Date(dateToday);\r\n  const [startDate, setStartDate] = useState(tomorrow);\r\n  console.log(startDate);\r\n  const printRef = createRef();\r\n\r\n  const [listOfPerson, setListOfPerson] = useState([]);\r\n  const [listOfGroup, setListOfGroup] = useState([]);\r\n\r\n  const getListOfReport = () => {\r\n    workWithServer.getListOfReport({'date': startDate}).then(data => {\r\n      setListOfPerson(prevState => prevState.map(el => {\r\n        let index = data.filter(obj => obj.userForControl_id === el.id);\r\n        if (index.length > 0) return {...el, ...index[0]};\r\n        delete el['comment'];\r\n        delete el['status_id'];\r\n        return el\r\n      }))\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    workWithServer.getListOfGroup().then(setListOfGroup);\r\n    workWithServer.getListOfPerson().then(data => {\r\n      setListOfPerson(data);\r\n      getListOfReport();\r\n    });\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getListOfReport();\r\n  }, [startDate]);\r\n\r\n  const onWorkAll = listOfPerson.filter(el => !el.status_id || el.status_id__name === 'Наряд');\r\n\r\n  return (\r\n    <>\r\n      <div ref={printRef}>\r\n        <Button className=\"\" type='primary' text=\"Назад\" onClick={() => {\r\n          setShowBody('nothing')\r\n        }}/>\r\n        <Button className=\"\" type='success' text=\"Распечатать\" onClick={() => {\r\n          printRef.current.classList.add('hidden');\r\n          headerRef.current.classList.add('hidden');\r\n          window.print();\r\n          printRef.current.classList.remove('hidden');\r\n          headerRef.current.classList.remove('hidden');\r\n        }}/>\r\n        <DatePicker\r\n          className=\"rounded border border-blue-700 p-1\"\r\n          selected={startDate}\r\n          onChange={date => setStartDate(date)}\r\n          dateFormat=\"dd.MM.yyyy\"\r\n          customInput={<InputForDatePicker/>}\r\n        />\r\n      </div>\r\n      <p className=\"font-bold m-2 text-center text-2xl\">Списки на проход на {startDate.toLocaleDateString('ru')}</p>\r\n      {listOfGroup.map(group => {\r\n        const byGroup = onWorkAll.filter(person => person.group_id === group.id);\r\n        const massOdd = byGroup.filter((_, index) => index % 2 === 1);\r\n        const massEven = byGroup.filter((_, index) => index % 2 === 0);\r\n\r\n        return (\r\n          <>\r\n            {byGroup.length > 0\r\n              ?\r\n              <div style={{pageBreakAfter: 'always'}}>\r\n                <p className=\"mt-2 text-center font-semibold text-2xl border p-1\">{group.name}</p>\r\n                <div className=\"text-center text-xs\">\r\n                  <div className=\"flex\">\r\n                    <p className=\"border p-1 inline-block w-1/12\">№</p>\r\n                    <p className=\"border p-1 inline-block w-2/12\">Звание и ФИО</p>\r\n                    <p className=\"border p-1 inline-block w-3/12\">Примечание (время прохода)</p>\r\n                    <p className=\"border p-1 inline-block w-1/12\">№</p>\r\n                    <p className=\"border p-1 inline-block w-2/12\">Звание и ФИО</p>\r\n                    <p className=\"border p-1 inline-block w-3/12\">Примечание (время прохода)</p>\r\n                  </div>\r\n                  {massEven.map((el, index) => {\r\n                    const oddElem = massOdd[index];\r\n                    return (\r\n                      <div className=\"flex\">\r\n                        <p className=\"border p-1 inline-block w-1/12\">{index + 1}</p>\r\n                        <p\r\n                          className=\"border p-1 inline-block w-2/12 text-left\">{el.rank_id__name ? el.rank_id__name : 'гп'} {el.name}</p>\r\n                        <p className=\"border p-1 inline-block w-3/12 text-left\"> {el.comment}</p>\r\n                        {\r\n                          oddElem && (\r\n                            <>\r\n                              <p className=\"border p-1 inline-block w-1/12\">{massEven.length + index + 1}</p>\r\n                              <p\r\n                                className=\"border p-1 inline-block w-2/12 text-left\">{oddElem.rank_id__name ? oddElem.rank_id__name : 'гп'} {oddElem.name}</p>\r\n                              <p className=\"border p-1 inline-block w-3/12 text-left\"> {oddElem.comment}</p>\r\n                            </>\r\n                          )\r\n                        }\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </div>\r\n              : <></>\r\n            }\r\n          </>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListForEntering","import React from 'react'\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\n\r\nexport default function Loader() {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n  return (\r\n    promiseInProgress &&\r\n    <div id=\"loader\" className=\"absolute h-screen w-screen bg-gray-400 bg-opacity-25 text-center flex top-0\">\r\n      <p className=\"m-auto bg-blue-600 text-white border rounded animate-pulse p-4\">Идет загрузка данных...</p>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport './modal.css'\r\nimport PropTypes from \"prop-types\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nfunction MyModal({show, showModal, children}) {\r\n\r\n  return (\r\n    <CSSTransition in={show} timeout={200} unmountOnExit classNames=\"myModalAnimation\">\r\n      <div className=\"fixed z-10 inset-0 overflow-y-auto\">\r\n        <div className=\"fixed inset-0 transition-opacity\">\r\n          <div className=\"absolute inset-0 bg-gray-500 opacity-75\" onClick={() => showModal(false)}/>\r\n        </div>\r\n        <div className=\"flex justify-center py-12 px-8\">\r\n          <div\r\n            className=\"rounded shadow-xl transform transition-all my-8 sm:max-w-lg w-full\"\r\n            role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\r\n            <div className=\"bg-white rounded p-4\">\r\n              {children}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nMyModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  showModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MyModal","import React, {useEffect, useState} from 'react'\r\nimport Button from \"./Button\";\r\nimport workWithServer from \"../core/workWithServer\";\r\nimport Moment from \"react-moment\";\r\nimport MyModal from \"./Modal\";\r\n\r\nexport default function MainPageForCenter({setShowBody}) {\r\n  const curr = new Date();\r\n  const firstDay = new Date(curr.getFullYear(), curr.getMonth(), 1);\r\n  const lastDay = new Date(curr.getFullYear(), curr.getMonth() + 1, 0);\r\n\r\n  const [startDate, setStartDate] = useState(firstDay);\r\n  const [endDate, setEndDate] = useState(lastDay);\r\n\r\n  const [month, setMonth] = useState(curr.getMonth());\r\n\r\n  const [massWithDate, setMassWithDate] = useState([]);\r\n\r\n  const [listOfPerson, setListOfPerson] = useState([]);\r\n  const [listOfReport, setListOfReport] = useState([]);\r\n  const [listStatus, setListStatus] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [personModal, setPersonModal] = useState({});\r\n  const [objectModal, setObjectModal] = useState({});\r\n\r\n  const modal = (person, obj, date) => {\r\n    setPersonModal(person);\r\n    setObjectModal(obj.length > 0 ? obj[0] : {\r\n      'userForControl_id': person.id,\r\n      'date': date\r\n    });\r\n    setShow(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    workWithServer.getListOfPerson().then(setListOfPerson);\r\n    workWithServer.getListOfStatus().then(setListStatus);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    workWithServer.getListOfReport({'date_begin': startDate, 'date_end': endDate}).then(data => {\r\n      setListOfReport(data)\r\n    });\r\n    const tempMassWithDate = [];\r\n    const currentDate = new Date(startDate);\r\n    while (endDate >= currentDate) {\r\n      tempMassWithDate.push(new Date(currentDate));\r\n      currentDate.setDate(currentDate.getDate() + 1)\r\n    }\r\n    setMassWithDate(tempMassWithDate)\r\n  }, [startDate, endDate]);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button className=\"\" type='primary' text=\"Управление л/с\" onClick={() => {\r\n          setShowBody('listOfPerson')\r\n        }}/>\r\n        <Button className=\"\" type='primary' text=\"Сформировать отчет\" onClick={() => {\r\n          setShowBody('makeReport')\r\n        }}/>\r\n        <select className=\"rounded border border-blue-700 p-1 bg-white\" value={month} onChange={e => {\r\n          const curr = new Date();\r\n          curr.setMonth(e.target.value);\r\n          setStartDate(new Date(curr.getFullYear(), curr.getMonth(), 1));\r\n          setEndDate(new Date(curr.getFullYear(), curr.getMonth() + 1, 0));\r\n          setMonth(e.target.value)\r\n        }\r\n        }>\r\n          <option value={0}>Январь</option>\r\n          <option value={1}>Февраль</option>\r\n          <option value={2}>Март</option>\r\n          <option value={3}>Апрель</option>\r\n          <option value={4}>Май</option>\r\n          <option value={5}>Июнь</option>\r\n          <option value={6}>Июль</option>\r\n          <option value={7}>Август</option>\r\n          <option value={8}>Сентябрь</option>\r\n          <option value={9}>Октябрь</option>\r\n          <option value={10}>Ноябрь</option>\r\n          <option value={11}>декабрь</option>\r\n        </select>\r\n        <Button className=\"\" type='warning' text=\"Сохранить\" onClick={() => {\r\n            workWithServer.setListOfReport({\r\n              'data': listOfReport,\r\n              'date_begin': startDate,\r\n              'date_end': endDate\r\n            })\r\n          }}/>\r\n        <div className=\"float-right\">\r\n          <Button className=\"\" type='warning' text=\"Списки на проход\" onClick={() => {\r\n            setShowBody('listForEntering')\r\n          }}/>\r\n          <Button className=\"\" type='warning' text=\"Справка доклад\" onClick={() => {\r\n            setShowBody('report')\r\n          }}/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"m-2 overflow-x-auto\">\r\n          <div className=\"flex\">\r\n            <p className=\"w-56 p-1 border\" style={{minWidth: 100}}>ФИО</p>\r\n            {massWithDate.map(el => <p className=\"p-1 border w-12 inline-block\">\r\n              <Moment format=\"DD\">{el}</Moment></p>)}\r\n          </div>\r\n          {listOfPerson.map(el => {\r\n            const listReportByPerson = listOfReport.filter(obj => obj.userForControl_id === el.id);\r\n            return <div className=\"flex\">\r\n              <p className=\"w-56  p-1 border cursor-pointer\">{el.rank_id__name + ' ' + el.name}</p>\r\n              {massWithDate.map(date => {\r\n                const filter = listReportByPerson.filter(obj => Number(obj.date) === date.getDate() && !!obj.status_id);\r\n                return <p className=\"p-1 border w-12 text-center align-middle text-red-500 cursor-pointer\"\r\n                          onClick={() => {\r\n                            modal(el, filter, date.getDate())\r\n                          }}>\r\n                  {filter.length > 0 ? '+' : ''}\r\n                </p>\r\n              })}\r\n            </div>\r\n          })}\r\n        </div>\r\n      </div>\r\n      <MyModal show={show} showModal={setShow}>\r\n        <div className=\"border-b m-1 mb-4 p-2 flex\">\r\n          <span className=\"my-auto\">{personModal.name} ({objectModal.date} число)</span>\r\n          <span className=\"ml-auto\" onClick={() => setShow(false)}>x</span>\r\n        </div>\r\n        <label>Выберите статус</label>\r\n        <select className=\"my-4 w-full h-full border-b border-blue-700 bg-white\" value={objectModal.status_id}\r\n                onChange={(e) => {\r\n                  setObjectModal({...objectModal, status_id: Number(e.target.value)})\r\n                }}>\r\n          <option key={-1} value=\"\">Сбросить статус</option>\r\n          {listStatus.map(el => <option key={el.id} value={el.id}>{el.name}</option>)}\r\n        </select>\r\n        <label>Комментарий</label>\r\n        <textarea className=\"my-4 p-1 w-full border border-blue-700 bg-white rounded outline-none\"\r\n                  placeholder=\"Оставьте комментарий...\" onChange={(e) => {\r\n          setObjectModal({...objectModal, comment: e.target.value})\r\n        }}>\r\n          {objectModal.comment}\r\n        </textarea>\r\n        <Button className=\"my-4 mx-0 w-full\" type=\"primary\" text=\"Сохранить\" onClick={() => {\r\n          console.log(objectModal);\r\n          setListOfReport(prev => {\r\n            let add = false;\r\n            const returnMass = [...prev.map(el => {\r\n              if (el.userForControl_id === objectModal.userForControl_id && el.date === objectModal.date) {\r\n                el.status_id = objectModal.status_id;\r\n                el.comment = objectModal.comment;\r\n                add = true;\r\n              }\r\n              return el\r\n            })];\r\n            !add && returnMass.push(objectModal);\r\n            return returnMass\r\n          });\r\n          setShow(false);\r\n        }}/>\r\n      </MyModal>\r\n    </div>\r\n  )\r\n}","import React, {createRef, useState} from \"react\";\nimport Button from \"./Button\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport ListOfPerson from \"./ListOfPerson\";\nimport MakeReport from \"./MakeReport\";\nimport SeeReport from \"./SeeReport\";\nimport ListForEntering from \"./ListForEntering\";\nimport Loader from \"./Loader\";\nimport MainPageForCenter from \"./MainPageForCenter\";\n\n\nfunction Home({user}) {\n  const [showBody, setShowBody] = useState('nothing');\n  const headerRef = createRef();\n\n  const mainButton = <MainPageForCenter setShowBody={setShowBody}/>;\n\n  const bodyForCentre = () => {\n    switch (showBody) {\n      case 'listOfPerson':\n        return (<ListOfPerson setShowBody={setShowBody}/>);\n      case 'makeReport':\n        return (<MakeReport setShowBody={setShowBody}/>);\n      case 'listForEntering':\n        return (<ListForEntering headerRef={headerRef} setShowBody={setShowBody}/>);\n      case 'report':\n        return (<SeeReport headerRef={headerRef} setShowBody={setShowBody}/>);\n      default:\n        return (mainButton)\n    }\n  };\n\n  const mainButtonForControl = (\n    <div>\n      <Button className=\"\" type='primary' text=\"Списки на проход\" onClick={() => {\n        setShowBody('listForEntering')\n      }}/>\n      <Button className=\"\" type='primary' text=\"Справка доклад\" onClick={() => {\n        setShowBody('report')\n      }}/>\n    </div>\n  );\n\n  const bodyForControl = () => {\n    switch (showBody) {\n      case 'listForEntering':\n        return (<ListForEntering headerRef={headerRef} setShowBody={setShowBody}/>);\n      case 'report':\n        return (<SeeReport headerRef={headerRef} setShowBody={setShowBody}/>);\n      default:\n        return (mainButtonForControl)\n    }\n  };\n\n  return (\n    <>\n      <Header headerRef={headerRef}/>\n      <div className=\"px-2\">\n        {user['is_control']\n          ? bodyForControl()\n          : bodyForCentre()\n\n        }\n      </div>\n      <Loader/>\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  }\n}\n\nexport default connect(mapStateToProps)(Home)","import React, {useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport workWithServer from \"./core/workWithServer\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nimport {initUser} from \"./redux/actions/actions\";\n\nfunction App({user, initUser}) {\n\tuseEffect(() => {\n\t\t\tworkWithServer.initUser()\n\t\t\t\t.then(data => {\n\t\t\t\t\tinitUser({...data, is_initial: true})\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tinitUser({...user, is_initial: true})\n\t\t\t\t})\n\t\t}, []\n\t);\n\n\treturn (\n\t\tuser.is_initial\n\t\t\t? (\n\t\t\t\tuser.username\n\t\t\t\t\t? <Home/>\n\t\t\t\t\t: <Login/>\n\t\t\t)\n\t\t\t: <span>Loading</span>\n\t)\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tuser: state.user,\n\t}\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tinitUser: user => dispatch(initUser(user))\n\t}\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n\nApp.propTypes = {\n\tuser: PropTypes.object,\n\tinitUser: PropTypes.func,\n};\n","import {InitUser} from \"../actions/actionsType\";\n\nconst initialState = {\n  username: '',\n  is_initial: false,\n}\n\nexport default function user(state = initialState, action) {\n  switch (action.type) {\n    case InitUser:\n      return {\n        ...state,\n        ...action.user,\n      }\n    default:\n      return state\n  }\n}","import {combineReducers} from 'redux'\nimport user from \"./reducers/user\";\n\nexport default combineReducers({\n  user,\n})","// @ts-ignore\nimport React from 'react';\n// @ts-ignore\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './tailwind.output.css';\n// @ts-ignore\nimport {BrowserRouter} from 'react-router-dom'\n\nimport {createStore} from 'redux'\n// @ts-ignore\nimport {Provider} from 'react-redux'\nimport rootReducer from \"./redux/rootReducer\";\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<App/>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}