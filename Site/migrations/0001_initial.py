# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2020-12-26 09:18
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=500, verbose_name=' Название')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='DayData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('date', models.DateField(verbose_name='Дата')),
            ],
            options={
                'verbose_name': 'л/с по дням',
                'verbose_name_plural': 'л/с по дням',
            },
        ),
        migrations.CreateModel(
            name='ExtraDataForDayData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=500, null=True, verbose_name='Название')),
                ('value', models.TextField(blank=True, max_length=500, null=True, verbose_name='Значение')),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Site.DayData', verbose_name='DayData')),
            ],
            options={
                'verbose_name': 'Дополнительное поле для статуса',
                'verbose_name_plural': 'Дополнительные поля для статуса',
            },
        ),
        migrations.CreateModel(
            name='Holidays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(blank=True, default=None, null=True, verbose_name='День')),
                ('month', models.IntegerField(blank=True, default=None, null=True, verbose_name='Месяц')),
                ('chill', models.BooleanField(default=True, verbose_name='Отдых')),
            ],
            options={
                'verbose_name': 'Праздник',
                'verbose_name_plural': 'Праздники',
            },
        ),
        migrations.CreateModel(
            name='OutUserConnect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('out_id', models.IntegerField(blank=True, default=None, null=True, verbose_name='PK')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профиль пользователей',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.TextField(blank=True, max_length=500, verbose_name='Телефон')),
                ('is_control', models.BooleanField(default=False, verbose_name='Контролирующий')),
                ('is_editor', models.BooleanField(default=True, verbose_name='Editor')),
                ('is_db', models.BooleanField(default=False, verbose_name='DB')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профиль пользователей',
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=500, verbose_name=' Название')),
            ],
            options={
                'verbose_name': 'Звание',
                'verbose_name_plural': 'Звания',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=500, verbose_name='Название')),
                ('abbr', models.TextField(blank=True, max_length=500, verbose_name='Сокращение')),
                ('workDay', models.BooleanField(default=False, verbose_name='Устанавливается только на следующий день')),
                ('with_extraField', models.BooleanField(default=False, verbose_name='Требуются дополнительные поля')),
                ('with_disease', models.BooleanField(default=False, verbose_name='Болен')),
                ('with_work', models.BooleanField(default=False, verbose_name='Присутствует на работе')),
                ('with_kpp', models.BooleanField(default=False, verbose_name='Проходит через КПП')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.Status', verbose_name='Родитель')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
            },
        ),
        migrations.CreateModel(
            name='UserForControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=500, verbose_name='ФИО')),
                ('is_military', models.BooleanField(default=True, verbose_name='Военный')),
                ('is_woman_with_children', models.BooleanField(default=False, verbose_name='Женщина с детьми')),
                ('is_boss', models.BooleanField(default=False, verbose_name='Начальник подразделения')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Site.City', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'л/с по подразделениям',
                'verbose_name_plural': 'л/с по подразделениям',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=500)),
                ('position', models.FloatField(blank=True, null=True, verbose_name='Позиция')),
                ('out', models.BooleanField(default=False, verbose_name='Внешнее подразделение')),
                ('countMilByGroup', models.IntegerField(default=0, verbose_name='Штат подразделения (Военнослужащие)')),
                ('countByGroup', models.IntegerField(default=0, verbose_name='Штат подразделения (Гр. персонал)')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.UserGroup', verbose_name='Подразделение пользователя')),
            ],
            options={
                'verbose_name': 'Подразделение пользователей',
                'verbose_name_plural': 'Подразделение пользователей',
            },
        ),
        migrations.CreateModel(
            name='UserPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=500)),
                ('position', models.FloatField(blank=True, null=True, verbose_name='Позиция')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.UserGroup', verbose_name='Подразделение')),
            ],
            options={
                'verbose_name': 'Должность пользователей',
                'verbose_name_plural': 'Должность пользователей',
            },
        ),
        migrations.AddField(
            model_name='userforcontrol',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group', to='Site.UserGroup', verbose_name='Штатное подразделение'),
        ),
        migrations.AddField(
            model_name='userforcontrol',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.UserPost', verbose_name='Должность пользователя'),
        ),
        migrations.AddField(
            model_name='userforcontrol',
            name='rank',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.Rank', verbose_name='Звание'),
        ),
        migrations.AddField(
            model_name='userforcontrol',
            name='real_group',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='real_group', to='Site.UserGroup', verbose_name='Фактическое подразделение'),
        ),
        migrations.AddField(
            model_name='profile',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.UserGroup', verbose_name='Подразделение пользователя'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='outuserconnect',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Site.UserForControl', verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='daydata',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Site.Status', verbose_name='Причина отсутствия'),
        ),
        migrations.AddField(
            model_name='daydata',
            name='userForControl',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Site.UserForControl', verbose_name='Пользователь'),
        ),
    ]
